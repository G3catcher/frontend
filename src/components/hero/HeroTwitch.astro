---
import Button from "@components/navigation/Button.astro";
import ItemFilter from "@components/navigation/ItemFilter.astro";
import FormattedDate from "@components/FormattedDate.astro";

const {
  title,
  hero_buttons,
  intro,
  tag,
  filter,
  filters,
  filter_type,
  style,
  pubDate,
  base_url,
} = Astro.props;

const { slug } = Astro.params;

let origin = "";
if (Astro.site) {
  origin = Astro.site.origin;
}
---

<div
  class={`relative overflow-hidden  sm:h-screen ${
    style.hero_surface || "surface-dark"
  } ${style.hero_class || ""}`}
  transition:name={`hero_${slug || Math.random()}`}
  id="header"
>

  <div class="twitch">
    <div class="twitch-video">
      <iframe
        src={`https://player.twitch.tv/?channel=jakspeedruns&parent=${origin.replace("https://", "")}&autoplay=false`}
        frameborder="0"
        scrolling="no"
        allowfullscreen="true"
        height="100%"
        width="100%">
      </iframe>
    </div>
    <div class="twitch-chat">
      <iframe
        frameborder="0"
        scrolling="no"
        src=`https://www.twitch.tv/embed/jakspeedruns/chat?parent=${origin.replace("https://", "")}`
        height="100%"
        width="100%">
      </iframe>
    </div>
  </div>

  <div
    class="absolute inset-0 z-10 grid place-items-center bg-dark bg-opacity-20"
  >
    <div class="container-xl py-8">
      <div class="max-w-3xl">
        {
          pubDate && (
            <span class="text-overline">
              <FormattedDate date={pubDate} />
            </span>
          )
        }
        <h1 class="title">
          {title}
        </h1>
        {intro && <div class="subtitle balance py2"> {intro}</div>}

        {
          tag && (
            <ItemFilter
              filters={tag}
              className="mt-4 justify-start"
              links={true}
              {base_url}
            />
          )
        }

        {
          filters && (
            <ItemFilter
              filters={filters}
              className="mt-4"
              links={true}
              active={filter}
              type={filter_type}
              {base_url}
            />
          )
        }
        {
          hero_buttons && hero_buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 py-8">
              {hero_buttons.map((btn) => (
                <Button {...btn} />
              ))}
            </div>
          )
        }
        <slot />
      </div>
    </div>
  </div>
</div>
